# Generated by Django 4.2.4 on 2023-08-27 08:58

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("main", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommunityPerson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=255, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=255, verbose_name="Last Name"),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        verbose_name="Sex",
                    ),
                ),
                (
                    "relationship_to_head",
                    models.CharField(
                        choices=[
                            ("Head", "Head"),
                            ("Wife", "Wife"),
                            ("Husband", "Husband"),
                            ("Son", "Son"),
                            ("Daughter", "Daughter"),
                            ("Grandchild", "Grandchild"),
                            ("Parent", "Parent"),
                            ("Parent In-Law", "Parent In-Law"),
                            ("Daughter In-Law", "Daughter In-Law"),
                            ("Son In-Law", "Son In-Law"),
                            ("Sister In-Law", "Sister In-Law"),
                            ("Brother In-Law", "Brother In-Law"),
                            ("Brother", "Brother"),
                            ("Sister", "Sister"),
                            ("Uncle", "Uncle"),
                            ("Aunt", "Aunt"),
                            ("Niece", "Niece"),
                            ("Nephew", "Nephew"),
                            ("Cousin", "Cousin"),
                            ("Grandparent", "Grandparent"),
                            ("Adopted child", "Adopted child"),
                            ("Non relative", "Non relative"),
                        ],
                        max_length=255,
                        verbose_name="Relationship to Head",
                    ),
                ),
                (
                    "age_group",
                    models.CharField(
                        choices=[
                            ("Baby", "Baby (0-2 years)"),
                            ("Child", "Child (3-12 years)"),
                            ("Teenage", "Teenage (13-19 years)"),
                            ("Young Adult", "Young Adult (20-34)"),
                            ("Middle-aged Adult", "Middle-aged Adult (35-64)"),
                            (
                                "Old Age",
                                "Old Age (65-74 years young-old, 75-84 years middle-old, 85+ years very old)",
                            ),
                        ],
                        max_length=255,
                        verbose_name="Age Group",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                datetime.date(1900, 1, 1)
                            ),
                            django.core.validators.MaxValueValidator(
                                datetime.date(2023, 8, 27)
                            ),
                        ],
                        verbose_name="Date of Birth",
                    ),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Farmer", "Farmer"),
                            ("Fisherman", "Fisherman"),
                            ("Teacher", "Teacher"),
                            ("Doctor", "Doctor"),
                            ("Nurse", "Nurse"),
                            ("Engineer", "Engineer"),
                            ("Clerk", "Clerk"),
                            ("Salesperson", "Salesperson"),
                            ("Miner", "Miner"),
                            ("Driver", "Driver"),
                            ("Cook", "Cook/Chef"),
                            ("Service Worker", "Service Worker"),
                            ("Cleaning Staff", "Cleaning Staff"),
                            ("Security Guard", "Security Guard"),
                            ("Office Worker", "Office Worker"),
                            ("Student", "Student"),
                            ("Retired", "Retired"),
                            ("Homemaker", "Homemaker"),
                            ("Artist", "Artist"),
                            ("Musician", "Musician"),
                            ("Actor", "Actor/Actress"),
                            ("Writer", "Writer"),
                            ("Politician", "Politician"),
                            ("Lawyer", "Lawyer"),
                            ("Unemployed", "Unemployed"),
                            ("Other", "Other"),
                        ],
                        max_length=255,
                        verbose_name="Occupation",
                    ),
                ),
                (
                    "education_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("None", "No Formal Education"),
                            ("Infant", "Infant/Not Yet in School"),
                            ("Preschool", "Preschool"),
                            ("Kindergarten", "Kindergarten"),
                            ("Elementary Education", "Elementary Education"),
                            ("Primary Education", "Primary Education"),
                            ("Secondary Education", "Secondary Education"),
                            ("Vocational/Trade School", "Vocational/Trade School"),
                            ("Associate Degree", "Associate Degree"),
                            ("Bachelor’s Degree", "Bachelor’s Degree"),
                            ("Master’s Degree", "Master’s Degree"),
                            ("Doctorate/PhD", "Doctorate/PhD"),
                            ("Other", "Other"),
                        ],
                        max_length=255,
                        verbose_name="Education Level",
                    ),
                ),
            ],
            options={
                "verbose_name": "Community Person",
                "verbose_name_plural": "Community Person",
            },
        ),
        migrations.CreateModel(
            name="Dwelling",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dwelling_number",
                    models.PositiveIntegerField(
                        blank=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ],
                        verbose_name="Dwelling Number",
                    ),
                ),
                (
                    "dwelling_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Permanent", "Permanent"),
                            ("Semi-Permanent", "Semi-Permanent"),
                            ("Traditional", "Traditional"),
                        ],
                        max_length=255,
                        verbose_name="Dwelling Type",
                    ),
                ),
                (
                    "construction_year",
                    models.PositiveIntegerField(
                        blank=True,
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2023),
                        ],
                        verbose_name="Construction Year",
                    ),
                ),
                (
                    "trust_village",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dwellings_by_trust_village",
                        to="main.trustvillage",
                        verbose_name="Trust Village",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dwelling",
                "verbose_name_plural": "Dwellings",
                "unique_together": {("trust_village", "dwelling_number")},
            },
        ),
        migrations.CreateModel(
            name="Household",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "household_number",
                    models.PositiveIntegerField(
                        blank=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ],
                        verbose_name="Household Number",
                    ),
                ),
                (
                    "primary_income_source",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Primary Income Source"
                    ),
                ),
                (
                    "dwelling_number",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="households",
                        to="community_context.dwelling",
                        verbose_name="Dwelling Number",
                    ),
                ),
                (
                    "head_of_household",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="household_by_head_of_household",
                        to="community_context.communityperson",
                        verbose_name="Head of Houshold",
                    ),
                ),
                (
                    "trust_village",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="households_by_trust_village",
                        to="main.trustvillage",
                        verbose_name="Trust Village",
                    ),
                ),
            ],
            options={
                "verbose_name": "Household",
                "verbose_name_plural": "Households",
                "unique_together": {
                    ("trust_village", "dwelling_number", "household_number")
                },
            },
        ),
        migrations.CreateModel(
            name="HouseholdBankAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account_name",
                    models.CharField(max_length=255, verbose_name="Account Name"),
                ),
                (
                    "account_number",
                    models.CharField(
                        max_length=10,
                        validators=[
                            django.core.validators.MinValueValidator(8),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Account Name",
                    ),
                ),
                (
                    "branch",
                    models.CharField(blank=True, max_length=255, verbose_name="Branch"),
                ),
                (
                    "bank_initials",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="household_bank_accounts_by_bank_initials",
                        to="main.bank",
                        verbose_name="Bank Initials",
                    ),
                ),
                (
                    "household",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="community_context.household",
                    ),
                ),
            ],
            options={
                "verbose_name": "Household Bank Account",
                "verbose_name_plural": "Housheold Bank Accounts",
            },
        ),
        migrations.AddField(
            model_name="communityperson",
            name="dwelling_number",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="community_persons_by_dwelling_number",
                to="community_context.dwelling",
                verbose_name="Dwelling Number",
            ),
        ),
        migrations.AddField(
            model_name="communityperson",
            name="household_number",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="community_persons_by_household_number",
                to="community_context.household",
                verbose_name="Household Number",
            ),
        ),
        migrations.AddField(
            model_name="communityperson",
            name="trust_village",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="community_persons_by_trust_village",
                to="main.trustvillage",
                verbose_name="Trust Village",
            ),
        ),
    ]
